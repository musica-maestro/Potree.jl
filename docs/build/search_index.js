var documenterSearchIndex = {"docs":
[{"location":"struct.html#structs.jl","page":"struct.jl","title":"structs.jl","text":"","category":"section"},{"location":"struct.html","page":"struct.jl","title":"struct.jl","text":"In this file there's the struct of the CloudMetadata but if you exploreit you should see a commented section with the new data struct for Potree 2.0.","category":"page"},{"location":"struct.html#Main-Interface","page":"struct.jl","title":"Main Interface","text":"","category":"section"},{"location":"struct.html","page":"struct.jl","title":"struct.jl","text":"Potree.CloudMetadata","category":"page"},{"location":"struct.html#Potree.CloudMetadata","page":"struct.jl","title":"Potree.CloudMetadata","text":"Potree project metadata:\n\nversion:  the version number is needed to know how to interpret the data,\noctreeDir: the name of the directory where files of octree are contained,\ntightBoundingBox: it contains the minimum and maximum coordinates of the bounding box,\nboundingBox: it contains the minimum and maximum coordinates of the cubic bounding box aligned to the axes which contains the root node,\npointAttributes: declares the format of points. It can be LAS, LAZ or in the case of binary format it contains an array of attributes such as [\"POSITION_CARTESIAN\", \"COLOR_PACKED\", \"INTENSITY\"],\nspacing: spacing value at the root node,\nhierarchyStepSize: the number of levels in each chunk.\n\nExample\n\n{\n    \"version\": \"1.7\",\n    \"octreeDir\": \"data\",\n    \"projection\": \"\",\n    \"points\": 2502516,\n    \"boundingBox\": {\n        \"lx\": 295370.8436816006,\n        \"ly\": 4781124.438537028,\n        \"lz\": 225.44601794335939,\n        \"ux\": 295632.16918208889,\n        \"uy\": 4781385.764037516,\n        \"uz\": 486.77151843164065\n    },\n    \"tightBoundingBox\": {\n        \"lx\": 295370.8436816006,\n        \"ly\": 4781124.438537028,\n        \"lz\": 225.44601794335939,\n        \"ux\": 295632.16918208889,\n        \"uy\": 4781376.7190012,\n        \"uz\": 300.3583829030762\n    },\n    \"pointAttributes\": \"LAS\",\n    \"spacing\": 2.2631452083587648,\n    \"scale\": 0.001,\n    \"hierarchyStepSize\": 5\n}\n\nFields\n\nversion           :: String\noctreeDir         :: String\nprojection        :: String\npoints            :: Int64\nboundingBox       :: Common.AABB\ntightBoundingBox  :: Common.AABB\npointAttributes   :: String\nspacing           :: Float64\nscale             :: Float64\nhierarchyStepSize :: Int32\n\n\n\n\n\n","category":"type"},{"location":"json.html#json.jl","page":"json.jl","title":"json.jl","text":"","category":"section"},{"location":"json.html","page":"json.jl","title":"json.jl","text":"In this file there are some functions to read infos from the json potree file.","category":"page"},{"location":"json.html#Main-Interface","page":"json.jl","title":"Main Interface","text":"","category":"section"},{"location":"json.html","page":"json.jl","title":"json.jl","text":"Potree.json2volume","category":"page"},{"location":"json.html#Potree.json2volume","page":"json.jl","title":"Potree.json2volume","text":"json2volume(path::String)\n\nRead a file .json of volume model.\n\nExample of a volume file json structure.\n\n{\n   \"clip\":true,\n   \"name\":\"name\",\n   \"scale\":{\n      \"x\":1.,\n      \"y\":1.,\n      \"z\":1.\n   },\n   \"position\":{\n   \t  \"x\":0.,\n\t  \"y\":0.,\n\t  \"z\":0.\n   },\n   \"rotation\":{\n      \"x\":0.,\n      \"y\":0.,\n      \"z\":0.\n   },\n   \"permitExtraction\":true\n}\n\n\n\n\n\n","category":"function"},{"location":"json.html","page":"json.jl","title":"json.jl","text":"Potree.json2LARvolume","category":"page"},{"location":"json.html#Potree.json2LARvolume","page":"json.jl","title":"Potree.json2LARvolume","text":"json2LARvolume(path::String)\n\nReturn LAR model of Potree volume tools.\n\n\n\n\n\n","category":"function"},{"location":"json.html","page":"json.jl","title":"json.jl","text":"Potree.seedPointsFromFile","category":"page"},{"location":"json.html#Potree.seedPointsFromFile","page":"json.jl","title":"Potree.seedPointsFromFile","text":"measure JSON from Potree 1.7\n\n\n\n\n\n","category":"function"},{"location":"bin.html#bin.jl","page":"bin.jl","title":"bin.jl","text":"","category":"section"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"In this file there are all the useful functions that should be used to read a bin potree.","category":"page"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Thoose functions are tested but in order to be fully functional they need to be revised.","category":"page"},{"location":"bin.html#!BUG","page":"bin.jl","title":"!BUG","text":"","category":"section"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"in fact the function decodePoint decodes everything as suggested at hte end of pointDecoding but every bin file has a different bounding box instead bin2points passes to the decoder the bounding box of the cloud. Sometimes the resultant points are the same but as the Potree grows the points change their coordinates significally.","category":"page"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Here's an example using the stair potree stored in the potree folder: (Image: LasBin.JPG) As you can see the circled parts differ.","category":"page"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"By the way that's a minor issue because this \"bug\" could be fixed in various way. In this package there's also a test file that helps to check wheter further changes resolve the problem.","category":"page"},{"location":"bin.html#ToDo","page":"bin.jl","title":"ToDo","text":"","category":"section"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Fix the decoding\nParse RGB to LasIO.N0f16\nAs the previous points are fixed just create a trie with the previous infos","category":"page"},{"location":"bin.html#Main-Interface","page":"bin.jl","title":"Main Interface","text":"","category":"section"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Potree.decodePoint","category":"page"},{"location":"bin.html#Potree.decodePoint","page":"bin.jl","title":"Potree.decodePoint","text":"function decodePoint(point::Int32, scale::Float32, boundingBoxMin::Float32) -> Float32\n\ndecodes a point of a bin file (https://github.com/PropellerAero/potree-propeller-private/blob/master/docs/file_format.md )\n\n\n\n\n\n","category":"function"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Potree.binToPointsUgly","category":"page"},{"location":"bin.html#Potree.binToPointsUgly","page":"bin.jl","title":"Potree.binToPointsUgly","text":"binToPointsUgly(fname::String) -> nothing\n\nFirst version of decoder doesn't return nothing.  It just shows the decoded points and Binary code for rgba\n\n\n\n\n\n","category":"function"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Potree.bin2points","category":"page"},{"location":"bin.html#Potree.bin2points","page":"bin.jl","title":"Potree.bin2points","text":"bin2points(fname::String) -> Array{Float64,2}(undef, 3, 0)\n\nReturns every point of the passed bin file.\n\n\n\n\n\n","category":"function"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Potree.bin2rgb","category":"page"},{"location":"bin.html#Potree.bin2rgb","page":"bin.jl","title":"Potree.bin2rgb","text":"bin2rgb(fname::String) -> {LasIO.N0f16,2}(undef, 3, 0)\n\n(BUGGED RETURN) TODO: parse rgba to LasIO.N0f16 \"Should\" return rgb(a) values of every point of the bin file.\n\n\n\n\n\n","category":"function"},{"location":"bin.html","page":"bin.jl","title":"bin.jl","text":"Potree.bin2pointcloud","category":"page"},{"location":"bin.html#Potree.bin2pointcloud","page":"bin.jl","title":"Potree.bin2pointcloud","text":"bin2pointcloud(source::String) ->  Array{Float64,2}(undef, 3, 0)\n\nTODO: check bin2rgbs Returns a PointCloud without Point and Cloud... It's just an array of points\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html#hierarchy.jl","page":"hierarchy.jl","title":"hierarchy.jl","text":"","category":"section"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"In these file there are useful functions to explore the potree, starting from the files continuing with the construction of the trie and, last but not least, the creation of a sub trie.","category":"page"},{"location":"hierarchy.html#Main-Interface","page":"hierarchy.jl","title":"Main Interface","text":"","category":"section"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.potree2trie","category":"page"},{"location":"hierarchy.html#Potree.potree2trie","page":"hierarchy.jl","title":"Potree.potree2trie","text":"potree2trie(potree::String) -> trie.children\n\nTrie data structures for Potree hierarchy:\n\neach file in octree directory is stored in a node,\nfirst node is r, root of potree.\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.max_depth","category":"page"},{"location":"hierarchy.html#Potree.max_depth","page":"hierarchy.jl","title":"Potree.max_depth","text":"max_depth(trie::DataStructures.Trie{String}) -> Int\n\nMaximum depth of trie.\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.cut_trie!","category":"page"},{"location":"hierarchy.html#Potree.cut_trie!","page":"hierarchy.jl","title":"Potree.cut_trie!","text":"cut_trie!(trie::DataStructures.Trie{String}, LOD::Int, l = 0::Int)\n\nReturn truncated trie.\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.get_all_values","category":"page"},{"location":"hierarchy.html#Potree.get_all_values","page":"hierarchy.jl","title":"Potree.get_all_values","text":"get_all_values(trie::DataStructures.Trie{String}) -> Array{String,1}\n\nReturn a collection of all values in trie.\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.sub_trie","category":"page"},{"location":"hierarchy.html#Potree.sub_trie","page":"hierarchy.jl","title":"Potree.sub_trie","text":"sub_trie(t::DataStructures.Trie{String}, root::AbstractString) -> DataStructures.Trie\n\nReturn the subtrie with defined root node.\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.get_files_in_potree_folder","category":"page"},{"location":"hierarchy.html#Potree.get_files_in_potree_folder","page":"hierarchy.jl","title":"Potree.get_files_in_potree_folder","text":"getfilesinpotreefolder(potree::String, LOD::Int, all_prev=true::Bool) -> Array{String,1}\n\nReturn all files at that level of potree\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.get_files","category":"page"},{"location":"hierarchy.html#Potree.get_files","page":"hierarchy.jl","title":"Potree.get_files","text":"getfiles(trie::DataStructures.Trie{String}, LOD::Int, data=String[]::Array{String,1}, l = 0::Int, allprev = true::Bool) -> Array{String,1}\n\nAccumulate all values from root to defined level LOD.\n\n\n\n\n\n","category":"function"},{"location":"hierarchy.html","page":"hierarchy.jl","title":"hierarchy.jl","text":"Potree.readhrc","category":"page"},{"location":"hierarchy.html#Potree.readhrc","page":"hierarchy.jl","title":"Potree.readhrc","text":"readhrc(potree::String)\n\nReads the hrc file of the potree\n\n\n\n\n\n","category":"function"},{"location":"las.html#las.jl","page":"las.jl","title":"las.jl","text":"","category":"section"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"The core of the package to read potrees made of las or laz files. The main difference with the load.jl of (marteseragh)[https://github.com/marteresagh] are stored in the las2pointcloud function.","category":"page"},{"location":"las.html#multithreading-on-las2pointcloud","page":"las.jl","title":"multithreading on las2pointcloud","text":"","category":"section"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"This function is crucial because it reads the coordinates and rgbs of each point and each file. The number of files in a potree grows as the potree size grows so if we have a potree with milions and milions of points the multithreading helps to reduce the computation time of the structure.","category":"page"},{"location":"las.html#benchmarking","page":"las.jl","title":"benchmarking","text":"","category":"section"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Using a small file (357.003 points): (Image: Benchamrk_small.JPG) (Image: Stairs.JPG)","category":"page"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"! This potree is present in this package into potree folder","category":"page"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Using a big file (14.027.872 points):","category":"page"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"! This potree is NOT present in this package into potree folder : download","category":"page"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"As you can see even if the allocation is bigger the computational time is ~60% less.","category":"page"},{"location":"las.html#Main-Interface","page":"las.jl","title":"Main Interface","text":"","category":"section"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Potree.las2pointcloud","category":"page"},{"location":"las.html#Potree.las2pointcloud","page":"las.jl","title":"Potree.las2pointcloud","text":"las2pointcloud(fnames::String...) -> PointCloud\n\nRead more than one file .las and extrapolate the LAR model and the color of each point.\n\n\n\n\n\n","category":"function"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Potree.las2larpoints","category":"page"},{"location":"las.html#Potree.las2larpoints","page":"las.jl","title":"Potree.las2larpoints","text":"las2larpoints(file::String) -> Lar.Points\n\nReturn coordinates of points in LAS file.\n\n\n\n\n\n","category":"function"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Potree.las2aabb","category":"page"},{"location":"las.html#Potree.las2aabb","page":"las.jl","title":"Potree.las2aabb","text":"las2aabb(file::String) -> AABB\n\nReturn LAS file's bounding box.\n\n\n\n\n\n","category":"function"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Potree.las2color","category":"page"},{"location":"las.html#Potree.las2color","page":"las.jl","title":"Potree.las2color","text":"las2color(file::String)::Lar.Points\n\nReturn color, rgb, associated to each point in LAS file.\n\n\n\n\n\n","category":"function"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Potree.color","category":"page"},{"location":"las.html#Potree.color","page":"las.jl","title":"Potree.color","text":"color(p::LasPoint, header::LasHeader)\n\nReturn color of one point in LAS file.\n\n\n\n\n\n","category":"function"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Potree.xyz","category":"page"},{"location":"las.html#Potree.xyz","page":"las.jl","title":"Potree.xyz","text":" xyz(p::LasPoint, h::LasHeader)\n\nReturn coords of this point p.\n\n\n\n\n\n","category":"function"},{"location":"las.html","page":"las.jl","title":"las.jl","text":"Potree.read_LAS_LAZ","category":"page"},{"location":"las.html#Potree.read_LAS_LAZ","page":"las.jl","title":"Potree.read_LAS_LAZ","text":"read_LAS_LAZ(fname::String)\n\nRead point cloud files: LAS or LAZ.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html#utilities.jl","page":"utilities.jl","title":"utilities.jl","text":"","category":"section"},{"location":"utilities.html","page":"utilities.jl","title":"utilities.jl","text":"Some simple utilities functions similar to the ones present in json.jl and hierarchy.jl.","category":"page"},{"location":"utilities.html#Main-Interface","page":"utilities.jl","title":"Main Interface","text":"","category":"section"},{"location":"utilities.html","page":"utilities.jl","title":"utilities.jl","text":"Potree.get_directories","category":"page"},{"location":"utilities.html#Potree.get_directories","page":"utilities.jl","title":"Potree.get_directories","text":"Read file line by line.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"utilities.jl","title":"utilities.jl","text":"Potree.boxmodel_from_json","category":"page"},{"location":"utilities.html#Potree.boxmodel_from_json","page":"utilities.jl","title":"Potree.boxmodel_from_json","text":"boxmodelfromjson(volume::String)\n\nRead volume model from a file JSON.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"utilities.jl","title":"utilities.jl","text":"Potree.searchfile","category":"page"},{"location":"utilities.html#Potree.searchfile","page":"utilities.jl","title":"Potree.searchfile","text":"In recursive mode, search all files with key in filename.\n\n\n\n\n\n","category":"function"},{"location":"utilities.html","page":"utilities.jl","title":"utilities.jl","text":"Potree.source2pc","category":"page"},{"location":"utilities.html#Potree.source2pc","page":"utilities.jl","title":"Potree.source2pc","text":"generate input point cloud\n\n\n\n\n\n","category":"function"},{"location":"index.html#Potree.jl","page":"Home","title":"Potree.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"A potree struct manager for julia.","category":"page"},{"location":"index.html#!!!-note","page":"Home","title":"!!! note","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"That's an enhanced version of FileManager.jl made by marteresagh","category":"page"},{"location":"index.html#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Multithreaded loading of Potree (1.7) made of .bin, .las and .laz files.\nTesting of main functions in this package","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"This documentation provides an explaination on how Potree.jl works.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Some examples of packages using Documenter can be found on the examples folder in this packagee.","category":"page"},{"location":"index.html#SRC-file-tree","page":"Home","title":"SRC file tree","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The source folder could be devided into 2 parts: loading and managing. Into the loading folder there are 4 files with the main apis. Into the managing part there are the useful functions to manage the potree struct and the file searching.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"📦src\n ┣ 📂Load\n ┃ ┣ 📜bin.jl\n ┃ ┣ 📜hierarchy.jl\n ┃ ┣ 📜json.jl\n ┃ ┗ 📜las.jl\n ┣ 📜Potree.jl\n ┣ 📜struct.jl\n ┗ 📜utilities.jl\\","category":"page"}]
}
